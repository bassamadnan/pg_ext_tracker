--- timescale_extracts/timescaledb_2_13_0_pg13.out	2025-07-06 13:06:42.694682820 +0530
+++ timescale_extracts/timescaledb_2_14_0_pg13.out	2025-07-06 13:06:58.181924445 +0530
@@ -6,7 +6,7 @@
 
    extname   | extversion 
 -------------+------------
- timescaledb | 2.13.0
+ timescaledb | 2.14.0
 (1 row)
 
 
@@ -17,14 +17,12 @@
 schema_name|view_name|columns
 _timescaledb_internal|compressed_chunk_stats|hypertable_schema, hypertable_name, chunk_schema, chunk_name, compression_status, uncompressed_heap_size, uncompressed_index_size, uncompressed_toast_size, uncompressed_total_size, compressed_heap_size, compressed_index_size, compressed_toast_size, compressed_total_size
 _timescaledb_internal|hypertable_chunk_local_size|hypertable_schema, hypertable_name, hypertable_id, chunk_id, chunk_schema, chunk_name, total_bytes, heap_bytes, index_bytes, toast_bytes, compressed_total_size, compressed_heap_size, compressed_index_size, compressed_toast_size
-timescaledb_experimental|chunk_replication_status|hypertable_schema, hypertable_name, chunk_schema, chunk_name, desired_num_replicas, num_replicas, replica_nodes, non_replica_nodes
 timescaledb_experimental|policies|relation_name, relation_schema, schedule_interval, proc_schema, proc_name, config, hypertable_schema, hypertable_name
-timescaledb_information|chunks|hypertable_schema, hypertable_name, chunk_schema, chunk_name, primary_dimension, primary_dimension_type, range_start, range_end, range_start_integer, range_end_integer, is_compressed, chunk_tablespace, data_nodes, chunk_creation_time
+timescaledb_information|chunks|hypertable_schema, hypertable_name, chunk_schema, chunk_name, primary_dimension, primary_dimension_type, range_start, range_end, range_start_integer, range_end_integer, is_compressed, chunk_tablespace, chunk_creation_time
 timescaledb_information|compression_settings|hypertable_schema, hypertable_name, attname, segmentby_column_index, orderby_column_index, orderby_asc, orderby_nullsfirst
 timescaledb_information|continuous_aggregates|hypertable_schema, hypertable_name, view_schema, view_name, view_owner, materialized_only, compression_enabled, materialization_hypertable_schema, materialization_hypertable_name, view_definition, finalized
-timescaledb_information|data_nodes|node_name, owner, options
 timescaledb_information|dimensions|hypertable_schema, hypertable_name, dimension_number, column_name, column_type, dimension_type, time_interval, integer_interval, integer_now_func, num_partitions
-timescaledb_information|hypertables|hypertable_schema, hypertable_name, owner, num_dimensions, num_chunks, compression_enabled, is_distributed, replication_factor, data_nodes, tablespaces
+timescaledb_information|hypertables|hypertable_schema, hypertable_name, owner, num_dimensions, num_chunks, compression_enabled, tablespaces
 timescaledb_information|job_errors|job_id, proc_schema, proc_name, pid, start_time, finish_time, sqlerrcode, err_message
 timescaledb_information|job_stats|hypertable_schema, hypertable_name, job_id, last_run_started_at, last_successful_finish, last_run_status, job_status, last_run_duration, next_start, total_runs, total_successes, total_failures
 timescaledb_information|jobs|job_id, application_name, schedule_interval, max_runtime, max_retries, retry_period, proc_schema, proc_name, owner, scheduled, fixed_schedule, config, next_start, initial_start, hypertable_schema, hypertable_name, check_schema, check_name
@@ -51,28 +49,18 @@
 _timescaledb_internal|cagg_watermark_materialized|hypertable_id integer|int8
 _timescaledb_internal|calculate_chunk_interval|dimension_id integer, dimension_coord bigint, chunk_target_size bigint|int8
 _timescaledb_internal|chunk_constraint_add_table_constraint|chunk_constraint_row _timescaledb_catalog.chunk_constraint|void
-_timescaledb_internal|chunk_drop_replica|chunk regclass, node_name name|void
 _timescaledb_internal|chunk_id_from_relid|relid oid|int4
 _timescaledb_internal|chunk_index_clone|chunk_index_oid oid|oid
 _timescaledb_internal|chunk_index_replace|chunk_index_oid_old oid, chunk_index_oid_new oid|void
 _timescaledb_internal|chunk_status|regclass|int4
-_timescaledb_internal|chunks_in|record record, chunks integer[]|bool
 _timescaledb_internal|chunks_local_size|schema_name_in name, table_name_in name|record
-_timescaledb_internal|chunks_remote_size|schema_name_in name, table_name_in name|record
 _timescaledb_internal|compressed_chunk_local_stats|schema_name_in name, table_name_in name|record
 _timescaledb_internal|compressed_chunk_remote_stats|schema_name_in name, table_name_in name|record
 _timescaledb_internal|continuous_agg_invalidation_trigger||trigger
 _timescaledb_internal|create_chunk|hypertable regclass, _slices jsonb, _schema_name name DEFAULT NULL::name, _table_name name DEFAULT NULL::name, chunk_table regclass DEFAULT NULL::regclass|record
-_timescaledb_internal|create_chunk_replica_table|chunk regclass, data_node_name name|void
 _timescaledb_internal|create_chunk_table|hypertable regclass, slices jsonb, schema_name name, table_name name|bool
 _timescaledb_internal|create_compressed_chunk|chunk regclass, chunk_table regclass, uncompressed_heap_size bigint, uncompressed_toast_size bigint, uncompressed_index_size bigint, compressed_heap_size bigint, compressed_toast_size bigint, compressed_index_size bigint, numrows_pre_compression bigint, numrows_post_compression bigint|regclass
-_timescaledb_internal|data_node_chunk_info|node_name name, schema_name_in name, table_name_in name|record
-_timescaledb_internal|data_node_compressed_chunk_stats|node_name name, schema_name_in name, table_name_in name|record
-_timescaledb_internal|data_node_hypertable_info|node_name name, schema_name_in name, table_name_in name|record
-_timescaledb_internal|data_node_index_size|node_name name, schema_name_in name, table_name_in name|record
 _timescaledb_internal|drop_chunk|chunk regclass|bool
-_timescaledb_internal|drop_dist_ht_invalidation_trigger|raw_hypertable_id integer|void
-_timescaledb_internal|drop_stale_chunks|node_name name, chunks integer[] DEFAULT NULL::integer[]|void
 _timescaledb_internal|finalize_agg|agg_name text, inner_agg_collation_schema name, inner_agg_collation_name name, inner_agg_input_types name[], inner_agg_serialized_state bytea, return_type_dummy_val anyelement|anyelement
 _timescaledb_internal|finalize_agg_ffunc|tstate internal, aggfn text, inner_agg_collation_schema name, inner_agg_collation_name name, inner_agg_input_types name[], inner_agg_serialized_state bytea, return_type_dummy_val anyelement|anyelement
 _timescaledb_internal|finalize_agg_sfunc|tstate internal, aggfn text, inner_agg_collation_schema name, inner_agg_collation_name name, inner_agg_input_types name[], inner_agg_serialized_state bytea, return_type_dummy_val anyelement|internal
@@ -87,24 +75,19 @@
 _timescaledb_internal|get_os_info||record
 _timescaledb_internal|get_partition_for_key|val anyelement|int4
 _timescaledb_internal|get_partition_hash|val anyelement|int4
-_timescaledb_internal|health||record
-_timescaledb_internal|hypertable_constraint_add_table_fk_constraint|user_ht_constraint_name name, user_ht_schema_name name, user_ht_table_name name, compress_ht_id integer|void
 _timescaledb_internal|hypertable_invalidation_log_delete|raw_hypertable_id integer|void
 _timescaledb_internal|hypertable_local_size|schema_name_in name, table_name_in name|record
-_timescaledb_internal|hypertable_remote_size|schema_name_in name, table_name_in name|record
 _timescaledb_internal|indexes_local_size|schema_name_in name, table_name_in name|record
-_timescaledb_internal|indexes_remote_size|schema_name_in name, table_name_in name, index_name_in name|int8
 _timescaledb_internal|insert_blocker||trigger
 _timescaledb_internal|interval_to_usec|chunk_interval interval|int8
 _timescaledb_internal|invalidation_cagg_log_add_entry|mat_hypertable_id integer, start_time bigint, end_time bigint|void
 _timescaledb_internal|invalidation_hyper_log_add_entry|raw_hypertable_id integer, start_time bigint, end_time bigint|void
-_timescaledb_internal|invalidation_process_cagg_log|mat_hypertable_id integer, raw_hypertable_id integer, dimtype regtype, window_start bigint, window_end bigint, mat_hypertable_ids integer[], bucket_widths bigint[], max_bucket_widths bigint[]|record
 _timescaledb_internal|invalidation_process_cagg_log|mat_hypertable_id integer, raw_hypertable_id integer, dimtype regtype, window_start bigint, window_end bigint, mat_hypertable_ids integer[], bucket_widths bigint[], max_bucket_widths bigint[], bucket_functions text[]|record
+_timescaledb_internal|invalidation_process_cagg_log|mat_hypertable_id integer, raw_hypertable_id integer, dimtype regtype, window_start bigint, window_end bigint, mat_hypertable_ids integer[], bucket_widths bigint[], max_bucket_widths bigint[]|record
 _timescaledb_internal|invalidation_process_hypertable_log|mat_hypertable_id integer, raw_hypertable_id integer, dimtype regtype, mat_hypertable_ids integer[], bucket_widths bigint[], max_bucket_widths bigint[], bucket_functions text[]|void
 _timescaledb_internal|invalidation_process_hypertable_log|mat_hypertable_id integer, raw_hypertable_id integer, dimtype regtype, mat_hypertable_ids integer[], bucket_widths bigint[], max_bucket_widths bigint[]|void
 _timescaledb_internal|materialization_invalidation_log_delete|mat_hypertable_id integer|void
 _timescaledb_internal|partialize_agg|arg anyelement|bytea
-_timescaledb_internal|ping_data_node|node_name name, timeout interval DEFAULT NULL::interval|bool
 _timescaledb_internal|policy_compression|job_id integer, config jsonb|void
 _timescaledb_internal|policy_compression_check|config jsonb|void
 _timescaledb_internal|policy_compression_execute|job_id integer, htid integer, lag anyelement, maxchunks integer, verbose_log boolean, recompress_enabled boolean, use_creation_time boolean|void
@@ -121,13 +104,8 @@
 _timescaledb_internal|range_value_to_pretty|time_value bigint, column_type regtype|text
 _timescaledb_internal|recompress_chunk_segmentwise|uncompressed_chunk regclass, if_compressed boolean DEFAULT false|regclass
 _timescaledb_internal|relation_size|relation regclass|record
-_timescaledb_internal|remote_txn_heal_data_node|foreign_server_oid oid|int4
 _timescaledb_internal|restart_background_workers||bool
-_timescaledb_internal|set_chunk_default_data_node|chunk regclass, node_name name|bool
-_timescaledb_internal|set_dist_id|dist_id uuid|bool
-_timescaledb_internal|set_peer_dist_id|dist_id uuid|bool
 _timescaledb_internal|show_chunk|chunk regclass|record
-_timescaledb_internal|show_connection_cache||record
 _timescaledb_internal|start_background_workers||bool
 _timescaledb_internal|stop_background_workers||bool
 _timescaledb_internal|subtract_integer_from_now|hypertable_relid regclass, lag bigint|int8
@@ -139,8 +117,6 @@
 _timescaledb_internal|to_unix_microseconds|ts timestamp with time zone|int8
 _timescaledb_internal|tsl_loaded||bool
 _timescaledb_internal|unfreeze_chunk|chunk regclass|bool
-_timescaledb_internal|validate_as_data_node||void
-_timescaledb_internal|wait_subscription_sync|schema_name name, table_name name, retry_count integer DEFAULT 18000, retry_delay_ms numeric DEFAULT 0.2|void
 public|add_compression_policy|hypertable regclass, compress_after "any" DEFAULT NULL::unknown, if_not_exists boolean DEFAULT false, schedule_interval interval DEFAULT NULL::interval, initial_start timestamp with time zone DEFAULT NULL::timestamp with time zone, timezone text DEFAULT NULL::text, compress_created_before interval DEFAULT NULL::interval|int4
 public|add_continuous_aggregate_policy|continuous_aggregate regclass, start_offset "any", end_offset "any", schedule_interval interval, if_not_exists boolean DEFAULT false, initial_start timestamp with time zone DEFAULT NULL::timestamp with time zone, timezone text DEFAULT NULL::text|int4
 public|add_dimension|hypertable regclass, column_name name, number_partitions integer DEFAULT NULL::integer, chunk_time_interval anyelement DEFAULT NULL::bigint, partitioning_func regproc DEFAULT NULL::regproc, if_not_exists boolean DEFAULT false|record
@@ -151,19 +127,20 @@
 public|alter_job|job_id integer, schedule_interval interval DEFAULT NULL::interval, max_runtime interval DEFAULT NULL::interval, max_retries integer DEFAULT NULL::integer, retry_period interval DEFAULT NULL::interval, scheduled boolean DEFAULT NULL::boolean, config jsonb DEFAULT NULL::jsonb, next_start timestamp with time zone DEFAULT NULL::timestamp with time zone, if_exists boolean DEFAULT false, check_config regproc DEFAULT NULL::regproc, fixed_schedule boolean DEFAULT NULL::boolean, initial_start timestamp with time zone DEFAULT NULL::timestamp with time zone, timezone text DEFAULT NULL::text|record
 public|chunk_compression_stats|hypertable regclass|record
 public|chunks_detailed_size|hypertable regclass|record
-public|compress_chunk|uncompressed_chunk regclass, if_not_compressed boolean DEFAULT false|regclass
-public|create_distributed_hypertable|relation regclass, time_column_name name, partitioning_column name DEFAULT NULL::name, number_partitions integer DEFAULT NULL::integer, associated_schema_name name DEFAULT NULL::name, associated_table_prefix name DEFAULT NULL::name, chunk_time_interval anyelement DEFAULT NULL::bigint, create_default_indexes boolean DEFAULT true, if_not_exists boolean DEFAULT false, partitioning_func regproc DEFAULT NULL::regproc, migrate_data boolean DEFAULT false, chunk_target_size text DEFAULT NULL::text, chunk_sizing_func regproc DEFAULT '_timescaledb_functions.calculate_chunk_interval'::regproc, time_partitioning_func regproc DEFAULT NULL::regproc, replication_factor integer DEFAULT NULL::integer, data_nodes name[] DEFAULT NULL::name[]|record
+public|compress_chunk|uncompressed_chunk regclass, if_not_compressed boolean DEFAULT true, recompress boolean DEFAULT false|regclass
 public|create_hypertable|relation regclass, dimension _timescaledb_internal.dimension_info, create_default_indexes boolean DEFAULT true, if_not_exists boolean DEFAULT false, migrate_data boolean DEFAULT false|record
-public|create_hypertable|relation regclass, time_column_name name, partitioning_column name DEFAULT NULL::name, number_partitions integer DEFAULT NULL::integer, associated_schema_name name DEFAULT NULL::name, associated_table_prefix name DEFAULT NULL::name, chunk_time_interval anyelement DEFAULT NULL::bigint, create_default_indexes boolean DEFAULT true, if_not_exists boolean DEFAULT false, partitioning_func regproc DEFAULT NULL::regproc, migrate_data boolean DEFAULT false, chunk_target_size text DEFAULT NULL::text, chunk_sizing_func regproc DEFAULT '_timescaledb_functions.calculate_chunk_interval'::regproc, time_partitioning_func regproc DEFAULT NULL::regproc, replication_factor integer DEFAULT NULL::integer, data_nodes name[] DEFAULT NULL::name[], distributed boolean DEFAULT NULL::boolean|record
-public|decompress_chunk|uncompressed_chunk regclass, if_compressed boolean DEFAULT false|regclass
+public|create_hypertable|relation regclass, time_column_name name, partitioning_column name DEFAULT NULL::name, number_partitions integer DEFAULT NULL::integer, associated_schema_name name DEFAULT NULL::name, associated_table_prefix name DEFAULT NULL::name, chunk_time_interval anyelement DEFAULT NULL::bigint, create_default_indexes boolean DEFAULT true, if_not_exists boolean DEFAULT false, partitioning_func regproc DEFAULT NULL::regproc, migrate_data boolean DEFAULT false, chunk_target_size text DEFAULT NULL::text, chunk_sizing_func regproc DEFAULT '_timescaledb_functions.calculate_chunk_interval'::regproc, time_partitioning_func regproc DEFAULT NULL::regproc|record
+public|decompress_chunk|uncompressed_chunk regclass, if_compressed boolean DEFAULT true|regclass
 public|delete_job|job_id integer|void
 public|drop_chunks|relation regclass, older_than "any" DEFAULT NULL::unknown, newer_than "any" DEFAULT NULL::unknown, "verbose" boolean DEFAULT false, created_before "any" DEFAULT NULL::unknown, created_after "any" DEFAULT NULL::unknown|text
+public|hypertable_approximate_detailed_size|relation regclass|record
+public|hypertable_approximate_size|hypertable regclass|int8
 public|hypertable_compression_stats|hypertable regclass|record
 public|hypertable_detailed_size|hypertable regclass|record
 public|hypertable_index_size|index_name regclass|int8
 public|hypertable_size|hypertable regclass|int8
 public|move_chunk|chunk regclass, destination_tablespace name, index_destination_tablespace name DEFAULT NULL::name, reorder_index regclass DEFAULT NULL::regclass, "verbose" boolean DEFAULT false|void
-public|recompress_chunk|chunk regclass, if_not_compressed boolean DEFAULT false|void
+public|recompress_chunk|chunk regclass, if_not_compressed boolean DEFAULT true|void
 public|refresh_continuous_aggregate|continuous_aggregate regclass, window_start "any", window_end "any"|void
 public|remove_compression_policy|hypertable regclass, if_exists boolean DEFAULT false|bool
 public|remove_continuous_aggregate_policy|continuous_aggregate regclass, if_not_exists boolean DEFAULT false, if_exists boolean DEFAULT NULL::boolean|void
@@ -174,29 +151,21 @@
 public|set_adaptive_chunking|hypertable regclass, chunk_target_size text, INOUT chunk_sizing_func regproc DEFAULT '_timescaledb_functions.calculate_chunk_interval'::regproc, OUT chunk_target_size bigint|record
 public|set_chunk_time_interval|hypertable regclass, chunk_time_interval anyelement, dimension_name name DEFAULT NULL::name|void
 public|show_chunks|relation regclass, older_than "any" DEFAULT NULL::unknown, newer_than "any" DEFAULT NULL::unknown, created_before "any" DEFAULT NULL::unknown, created_after "any" DEFAULT NULL::unknown|regclass
-public|timescaledb_fdw_handler||fdw_handler
-public|timescaledb_fdw_validator|text[], oid|void
 public|timescaledb_post_restore||bool
 public|timescaledb_pre_restore||bool
 timescaledb_experimental|add_policies|relation regclass, if_not_exists boolean DEFAULT false, refresh_start_offset "any" DEFAULT NULL::unknown, refresh_end_offset "any" DEFAULT NULL::unknown, compress_after "any" DEFAULT NULL::unknown, drop_after "any" DEFAULT NULL::unknown|bool
-timescaledb_experimental|allow_new_chunks|data_node_name name, hypertable regclass DEFAULT NULL::regclass|int4
 timescaledb_experimental|alter_policies|relation regclass, if_exists boolean DEFAULT false, refresh_start_offset "any" DEFAULT NULL::unknown, refresh_end_offset "any" DEFAULT NULL::unknown, compress_after "any" DEFAULT NULL::unknown, drop_after "any" DEFAULT NULL::unknown|bool
-timescaledb_experimental|block_new_chunks|data_node_name name, hypertable regclass DEFAULT NULL::regclass, force boolean DEFAULT false|int4
-timescaledb_experimental|cleanup_copy_chunk_operation|operation_id name|void
-timescaledb_experimental|copy_chunk|chunk regclass, source_node name DEFAULT NULL::name, destination_node name DEFAULT NULL::name, operation_id name DEFAULT NULL::name|void
-timescaledb_experimental|move_chunk|chunk regclass, source_node name DEFAULT NULL::name, destination_node name DEFAULT NULL::name, operation_id name DEFAULT NULL::name|void
 timescaledb_experimental|remove_all_policies|relation regclass, if_exists boolean DEFAULT false|bool
 timescaledb_experimental|remove_policies|relation regclass, if_exists boolean DEFAULT false, VARIADIC policy_names text[] DEFAULT NULL::text[]|bool
 timescaledb_experimental|show_policies|relation regclass|jsonb
-timescaledb_experimental|subscription_exec|subscription_command text|void
-timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp without time zone, origin timestamp without time zone|timestamp
-timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp with time zone|timestamptz
-timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp with time zone, origin timestamp with time zone, timezone text|timestamptz
 timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp with time zone, timezone text|timestamptz
-timescaledb_experimental|time_bucket_ng|bucket_width interval, ts date|date
-timescaledb_experimental|time_bucket_ng|bucket_width interval, ts date, origin date|date
 timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp without time zone|timestamp
+timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp with time zone, origin timestamp with time zone, timezone text|timestamptz
+timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp with time zone|timestamptz
 timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp with time zone, origin timestamp with time zone|timestamptz
+timescaledb_experimental|time_bucket_ng|bucket_width interval, ts date, origin date|date
+timescaledb_experimental|time_bucket_ng|bucket_width interval, ts timestamp without time zone, origin timestamp without time zone|timestamp
+timescaledb_experimental|time_bucket_ng|bucket_width interval, ts date|date
 
 -- ================================================================================
 -- TIMESCALEDB VIEW DEFINITIONS
@@ -255,29 +224,6 @@
             ELSE NULL::regclass
         END) relcompsize(total_size, heap_size, index_size, toast_size) ON true;
 timescaledb_experimental|
-chunk_replication_status|
- SELECT h.schema_name AS hypertable_schema,
-    h.table_name AS hypertable_name,
-    c.schema_name AS chunk_schema,
-    c.table_name AS chunk_name,
-    h.replication_factor AS desired_num_replicas,
-    count(cdn.chunk_id) AS num_replicas,
-    array_agg(cdn.node_name) AS replica_nodes,
-    ( SELECT array_agg(nodes.node_name) AS array_agg
-           FROM ( SELECT hdn.node_name
-                   FROM _timescaledb_catalog.hypertable_data_node hdn
-                  WHERE hdn.hypertable_id = h.id
-                EXCEPT
-                 SELECT cdn_1.node_name
-                   FROM _timescaledb_catalog.chunk_data_node cdn_1
-                  WHERE cdn_1.chunk_id = c.id
-          ORDER BY 1) nodes) AS non_replica_nodes
-   FROM _timescaledb_catalog.chunk c
-     JOIN _timescaledb_catalog.chunk_data_node cdn ON cdn.chunk_id = c.id
-     JOIN _timescaledb_catalog.hypertable h ON h.id = c.hypertable_id
-  GROUP BY h.id, c.id, h.schema_name, h.table_name, c.schema_name, c.table_name
-  ORDER BY h.id, c.id, h.schema_name, h.table_name, c.schema_name, c.table_name;
-timescaledb_experimental|
 policies|
  SELECT ca.user_view_name AS relation_name,
     ca.user_view_schema AS relation_schema,
@@ -304,7 +250,6 @@
     finalq.integer_range_end AS range_end_integer,
     finalq.is_compressed,
     finalq.chunk_table_space AS chunk_tablespace,
-    finalq.node_list AS data_nodes,
     finalq.creation_time AS chunk_creation_time
    FROM ( SELECT ht.schema_name AS hypertable_schema,
             ht.table_name AS hypertable_name,
@@ -334,7 +279,6 @@
                     ELSE false
                 END AS is_compressed,
             pgtab.spcname AS chunk_table_space,
-            chdn.node_list,
             srcch.creation_time
            FROM _timescaledb_catalog.chunk srcch
              JOIN _timescaledb_catalog.hypertable ht ON ht.id = srcch.hypertable_id
@@ -348,25 +292,32 @@
                     pg_namespace
                   WHERE pg_class.relnamespace = pg_namespace.oid) cl ON srcch.table_name = cl.relname AND srcch.schema_name = cl.schema_name
              LEFT JOIN pg_tablespace pgtab ON pgtab.oid = cl.reltablespace
-             LEFT JOIN ( SELECT chunk_data_node.chunk_id,
-                    array_agg(chunk_data_node.node_name ORDER BY chunk_data_node.node_name) AS node_list
-                   FROM _timescaledb_catalog.chunk_data_node
-                  GROUP BY chunk_data_node.chunk_id) chdn ON srcch.id = chdn.chunk_id
           WHERE srcch.dropped IS FALSE AND srcch.osm_chunk IS FALSE AND ht.compression_state <> 2) finalq
   WHERE finalq.chunk_dimension_num = 1;
 timescaledb_information|
 compression_settings|
  SELECT ht.schema_name AS hypertable_schema,
     ht.table_name AS hypertable_name,
-    segq.attname,
-    segq.segmentby_column_index,
-    segq.orderby_column_index,
-    segq.orderby_asc,
-    segq.orderby_nullsfirst
-   FROM _timescaledb_catalog.hypertable_compression segq,
-    _timescaledb_catalog.hypertable ht
-  WHERE segq.hypertable_id = ht.id AND (segq.segmentby_column_index IS NOT NULL OR segq.orderby_column_index IS NOT NULL)
-  ORDER BY ht.table_name, segq.segmentby_column_index, segq.orderby_column_index;
+    unnest(cs.segmentby)::name COLLATE "C" AS attname,
+    generate_series(1, array_length(cs.segmentby, 1))::smallint AS segmentby_column_index,
+    NULL::smallint AS orderby_column_index,
+    NULL::boolean AS orderby_asc,
+    NULL::boolean AS orderby_nullsfirst
+   FROM _timescaledb_catalog.hypertable ht
+     JOIN _timescaledb_catalog.compression_settings cs ON cs.relid::oid = format('%I.%I'::text, ht.schema_name, ht.table_name)::regclass::oid AND cs.segmentby IS NOT NULL
+  WHERE ht.compressed_hypertable_id IS NOT NULL
+UNION ALL
+ SELECT ht.schema_name AS hypertable_schema,
+    ht.table_name AS hypertable_name,
+    unnest(cs.orderby)::name COLLATE "C" AS attname,
+    NULL::smallint AS segmentby_column_index,
+    generate_series(1, array_length(cs.orderby, 1))::smallint AS orderby_column_index,
+    unnest(array_replace(array_replace(array_replace(cs.orderby_desc, false, NULL::boolean), true, false), NULL::boolean, true)) AS orderby_asc,
+    unnest(cs.orderby_nullsfirst) AS orderby_nullsfirst
+   FROM _timescaledb_catalog.hypertable ht
+     JOIN _timescaledb_catalog.compression_settings cs ON cs.relid::oid = format('%I.%I'::text, ht.schema_name, ht.table_name)::regclass::oid AND cs.orderby IS NOT NULL
+  WHERE ht.compressed_hypertable_id IS NOT NULL
+  ORDER BY 2, 4, 5;
 timescaledb_information|
 continuous_aggregates|
  SELECT ht.schema_name AS hypertable_schema,
@@ -401,17 +352,6 @@
           WHERE cagg.mat_hypertable_id = hypertable.id) mat_ht
   WHERE cagg.raw_hypertable_id = ht.id;
 timescaledb_information|
-data_nodes|
- SELECT s.node_name,
-    s.owner,
-    s.options
-   FROM ( SELECT srv.srvname AS node_name,
-            srv.srvowner::regrole::name AS owner,
-            srv.srvoptions AS options
-           FROM pg_foreign_server srv,
-            pg_foreign_data_wrapper fdw
-          WHERE srv.srvfdw = fdw.oid AND fdw.fdwname = 'timescaledb_fdw'::name) s;
-timescaledb_information|
 dimensions|
  SELECT ht.schema_name AS hypertable_schema,
     ht.table_name AS hypertable_name,
@@ -456,12 +396,6 @@
             WHEN ht.compression_state = 1 THEN true
             ELSE false
         END AS compression_enabled,
-        CASE
-            WHEN ht.replication_factor > 0 THEN true
-            ELSE false
-        END AS is_distributed,
-    ht.replication_factor,
-    dn.node_list AS data_nodes,
     srchtbs.tablespace_list AS tablespaces
    FROM _timescaledb_catalog.hypertable ht
      JOIN pg_tables t ON ht.table_name = t.tablename AND ht.schema_name = t.schemaname
@@ -470,10 +404,6 @@
             array_agg(tablespace.tablespace_name ORDER BY tablespace.id) AS tablespace_list
            FROM _timescaledb_catalog.tablespace
           GROUP BY tablespace.hypertable_id) srchtbs ON ht.id = srchtbs.hypertable_id
-     LEFT JOIN ( SELECT hypertable_data_node.hypertable_id,
-            array_agg(hypertable_data_node.node_name ORDER BY hypertable_data_node.node_name) AS node_list
-           FROM _timescaledb_catalog.hypertable_data_node
-          GROUP BY hypertable_data_node.hypertable_id) dn ON ht.id = dn.hypertable_id
   WHERE ht.compression_state <> 2 AND ca.mat_hypertable_id IS NULL;
 timescaledb_information|
 job_errors|
@@ -575,30 +505,6 @@
 viewowner|
 definition
 timescaledb_experimental|
-chunk_replication_status|
-postgres|
- SELECT h.schema_name AS hypertable_schema,
-    h.table_name AS hypertable_name,
-    c.schema_name AS chunk_schema,
-    c.table_name AS chunk_name,
-    h.replication_factor AS desired_num_replicas,
-    count(cdn.chunk_id) AS num_replicas,
-    array_agg(cdn.node_name) AS replica_nodes,
-    ( SELECT array_agg(nodes.node_name) AS array_agg
-           FROM ( SELECT hdn.node_name
-                   FROM _timescaledb_catalog.hypertable_data_node hdn
-                  WHERE (hdn.hypertable_id = h.id)
-                EXCEPT
-                 SELECT cdn_1.node_name
-                   FROM _timescaledb_catalog.chunk_data_node cdn_1
-                  WHERE (cdn_1.chunk_id = c.id)
-          ORDER BY 1) nodes) AS non_replica_nodes
-   FROM ((_timescaledb_catalog.chunk c
-     JOIN _timescaledb_catalog.chunk_data_node cdn ON ((cdn.chunk_id = c.id)))
-     JOIN _timescaledb_catalog.hypertable h ON ((h.id = c.hypertable_id)))
-  GROUP BY h.id, c.id, h.schema_name, h.table_name, c.schema_name, c.table_name
-  ORDER BY h.id, c.id, h.schema_name, h.table_name, c.schema_name, c.table_name;
-timescaledb_experimental|
 policies|
 postgres|
  SELECT ca.user_view_name AS relation_name,
@@ -627,7 +533,6 @@
     finalq.integer_range_end AS range_end_integer,
     finalq.is_compressed,
     finalq.chunk_table_space AS chunk_tablespace,
-    finalq.node_list AS data_nodes,
     finalq.creation_time AS chunk_creation_time
    FROM ( SELECT ht.schema_name AS hypertable_schema,
             ht.table_name AS hypertable_name,
@@ -657,9 +562,8 @@
                     ELSE false
                 END AS is_compressed,
             pgtab.spcname AS chunk_table_space,
-            chdn.node_list,
             srcch.creation_time
-           FROM (((((((_timescaledb_catalog.chunk srcch
+           FROM ((((((_timescaledb_catalog.chunk srcch
              JOIN _timescaledb_catalog.hypertable ht ON ((ht.id = srcch.hypertable_id)))
              JOIN _timescaledb_catalog.chunk_constraint chcons ON ((srcch.id = chcons.chunk_id)))
              JOIN _timescaledb_catalog.dimension dim ON ((srcch.hypertable_id = dim.hypertable_id)))
@@ -671,10 +575,6 @@
                     pg_namespace
                   WHERE (pg_class.relnamespace = pg_namespace.oid)) cl ON (((srcch.table_name = cl.relname) AND (srcch.schema_name = cl.schema_name))))
              LEFT JOIN pg_tablespace pgtab ON ((pgtab.oid = cl.reltablespace)))
-             LEFT JOIN ( SELECT chunk_data_node.chunk_id,
-                    array_agg(chunk_data_node.node_name ORDER BY chunk_data_node.node_name) AS node_list
-                   FROM _timescaledb_catalog.chunk_data_node
-                  GROUP BY chunk_data_node.chunk_id) chdn ON ((srcch.id = chdn.chunk_id)))
           WHERE ((srcch.dropped IS FALSE) AND (srcch.osm_chunk IS FALSE) AND (ht.compression_state <> 2))) finalq
   WHERE (finalq.chunk_dimension_num = 1);
 timescaledb_information|
@@ -682,15 +582,26 @@
 postgres|
  SELECT ht.schema_name AS hypertable_schema,
     ht.table_name AS hypertable_name,
-    segq.attname,
-    segq.segmentby_column_index,
-    segq.orderby_column_index,
-    segq.orderby_asc,
-    segq.orderby_nullsfirst
-   FROM _timescaledb_catalog.hypertable_compression segq,
-    _timescaledb_catalog.hypertable ht
-  WHERE ((segq.hypertable_id = ht.id) AND ((segq.segmentby_column_index IS NOT NULL) OR (segq.orderby_column_index IS NOT NULL)))
-  ORDER BY ht.table_name, segq.segmentby_column_index, segq.orderby_column_index;
+    ((unnest(cs.segmentby))::name COLLATE "C") AS attname,
+    (generate_series(1, array_length(cs.segmentby, 1)))::smallint AS segmentby_column_index,
+    NULL::smallint AS orderby_column_index,
+    NULL::boolean AS orderby_asc,
+    NULL::boolean AS orderby_nullsfirst
+   FROM (_timescaledb_catalog.hypertable ht
+     JOIN _timescaledb_catalog.compression_settings cs ON ((((cs.relid)::oid = ((format('%I.%I'::text, ht.schema_name, ht.table_name))::regclass)::oid) AND (cs.segmentby IS NOT NULL))))
+  WHERE (ht.compressed_hypertable_id IS NOT NULL)
+UNION ALL
+ SELECT ht.schema_name AS hypertable_schema,
+    ht.table_name AS hypertable_name,
+    ((unnest(cs.orderby))::name COLLATE "C") AS attname,
+    NULL::smallint AS segmentby_column_index,
+    (generate_series(1, array_length(cs.orderby, 1)))::smallint AS orderby_column_index,
+    unnest(array_replace(array_replace(array_replace(cs.orderby_desc, false, NULL::boolean), true, false), NULL::boolean, true)) AS orderby_asc,
+    unnest(cs.orderby_nullsfirst) AS orderby_nullsfirst
+   FROM (_timescaledb_catalog.hypertable ht
+     JOIN _timescaledb_catalog.compression_settings cs ON ((((cs.relid)::oid = ((format('%I.%I'::text, ht.schema_name, ht.table_name))::regclass)::oid) AND (cs.orderby IS NOT NULL))))
+  WHERE (ht.compressed_hypertable_id IS NOT NULL)
+  ORDER BY 2, 4, 5;
 timescaledb_information|
 continuous_aggregates|
 postgres|
@@ -726,18 +637,6 @@
           WHERE (cagg.mat_hypertable_id = hypertable.id)) mat_ht
   WHERE (cagg.raw_hypertable_id = ht.id);
 timescaledb_information|
-data_nodes|
-postgres|
- SELECT s.node_name,
-    s.owner,
-    s.options
-   FROM ( SELECT srv.srvname AS node_name,
-            ((srv.srvowner)::regrole)::name AS owner,
-            srv.srvoptions AS options
-           FROM pg_foreign_server srv,
-            pg_foreign_data_wrapper fdw
-          WHERE ((srv.srvfdw = fdw.oid) AND (fdw.fdwname = 'timescaledb_fdw'::name))) s;
-timescaledb_information|
 dimensions|
 postgres|
  SELECT ht.schema_name AS hypertable_schema,
@@ -784,24 +683,14 @@
             WHEN (ht.compression_state = 1) THEN true
             ELSE false
         END AS compression_enabled,
-        CASE
-            WHEN (ht.replication_factor > 0) THEN true
-            ELSE false
-        END AS is_distributed,
-    ht.replication_factor,
-    dn.node_list AS data_nodes,
     srchtbs.tablespace_list AS tablespaces
-   FROM ((((_timescaledb_catalog.hypertable ht
+   FROM (((_timescaledb_catalog.hypertable ht
      JOIN pg_tables t ON (((ht.table_name = t.tablename) AND (ht.schema_name = t.schemaname))))
      LEFT JOIN _timescaledb_catalog.continuous_agg ca ON ((ca.mat_hypertable_id = ht.id)))
      LEFT JOIN ( SELECT tablespace.hypertable_id,
             array_agg(tablespace.tablespace_name ORDER BY tablespace.id) AS tablespace_list
            FROM _timescaledb_catalog.tablespace
           GROUP BY tablespace.hypertable_id) srchtbs ON ((ht.id = srchtbs.hypertable_id)))
-     LEFT JOIN ( SELECT hypertable_data_node.hypertable_id,
-            array_agg(hypertable_data_node.node_name ORDER BY hypertable_data_node.node_name) AS node_list
-           FROM _timescaledb_catalog.hypertable_data_node
-          GROUP BY hypertable_data_node.hypertable_id) dn ON ((ht.id = dn.hypertable_id)))
   WHERE ((ht.compression_state <> 2) AND (ca.mat_hypertable_id IS NULL));
 timescaledb_information|
 job_errors|
@@ -911,12 +800,6 @@
 chunk_constraint|
 chunk_id integer, dimension_slice_id integer, constraint_name name, hypertable_constraint_name name
 _timescaledb_catalog|
-chunk_copy_operation|
-operation_id name, backend_pid integer, completed_stage name, time_start timestamp with time zone, chunk_id integer, compress_chunk_name name, source_node_name name, dest_node_name name, delete_on_source_node boolean
-_timescaledb_catalog|
-chunk_data_node|
-chunk_id integer, node_chunk_id integer, node_name name
-_timescaledb_catalog|
 chunk_index|
 chunk_id integer, index_name name, hypertable_id integer, hypertable_index_name name
 _timescaledb_catalog|
@@ -926,6 +809,9 @@
 compression_chunk_size|
 chunk_id integer, compressed_chunk_id integer, uncompressed_heap_size bigint, uncompressed_toast_size bigint, uncompressed_index_size bigint, compressed_heap_size bigint, compressed_toast_size bigint, compressed_index_size bigint, numrows_pre_compression bigint, numrows_post_compression bigint, numrows_frozen_immediately bigint
 _timescaledb_catalog|
+compression_settings|
+relid regclass, segmentby text[], orderby text[], orderby_desc boolean[], orderby_nullsfirst boolean[]
+_timescaledb_catalog|
 continuous_agg|
 mat_hypertable_id integer, raw_hypertable_id integer, parent_mat_hypertable_id integer, user_view_schema name, user_view_name name, partial_view_schema name, partial_view_name name, bucket_width bigint, direct_view_schema name, direct_view_name name, materialized_only boolean, finalized boolean
 _timescaledb_catalog|
@@ -953,27 +839,15 @@
 dimension|
 id integer, hypertable_id integer, column_name name, column_type regtype, aligned boolean, num_slices smallint, partitioning_func_schema name, partitioning_func name, interval_length bigint, compress_interval_length bigint, integer_now_func_schema name, integer_now_func name
 _timescaledb_catalog|
-dimension_partition|
-dimension_id integer, range_start bigint, data_nodes name[]
-_timescaledb_catalog|
 dimension_slice|
 id integer, dimension_id integer, range_start bigint, range_end bigint
 _timescaledb_catalog|
 hypertable|
-id integer, schema_name name, table_name name, associated_schema_name name, associated_table_prefix name, num_dimensions smallint, chunk_sizing_func_schema name, chunk_sizing_func_name name, chunk_target_size bigint, compression_state smallint, compressed_hypertable_id integer, replication_factor smallint, status integer
-_timescaledb_catalog|
-hypertable_compression|
-hypertable_id integer, attname name, compression_algorithm_id smallint, segmentby_column_index smallint, orderby_column_index smallint, orderby_asc boolean, orderby_nullsfirst boolean
-_timescaledb_catalog|
-hypertable_data_node|
-hypertable_id integer, node_hypertable_id integer, node_name name, block_chunks boolean
+id integer, schema_name name, table_name name, associated_schema_name name, associated_table_prefix name, num_dimensions smallint, chunk_sizing_func_schema name, chunk_sizing_func_name name, chunk_target_size bigint, compression_state smallint, compressed_hypertable_id integer, status integer
 _timescaledb_catalog|
 metadata|
 key name, value text, include_in_telemetry boolean
 _timescaledb_catalog|
-remote_txn|
-data_node_name name, remote_transaction_id text
-_timescaledb_catalog|
 tablespace|
 id integer, hypertable_id integer, tablespace_name name
 _timescaledb_catalog|
@@ -997,6 +871,6 @@
 extrelocatable|
 schema_name
 timescaledb|
-2.13.0|
+2.14.0|
 f|
 public
