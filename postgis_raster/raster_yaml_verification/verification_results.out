-- ================================================================================
-- POSTGIS RASTER YAML VERIFICATION TEST (FIXED)
-- ================================================================================
psql:/tmp/raster_yaml_verification_fixed.sql:6: NOTICE:  extension "postgis" already exists, skipping
CREATE EXTENSION
CREATE EXTENSION
Extension Status:
    extname     | extversion 
----------------+------------
 postgis        | 3.4.3
 postgis_raster | 3.4.3
(2 rows)

-- ================================================================================
-- TESTING EMPTY DATABASE SCENARIO (Baseline)
-- ================================================================================
BASELINE TEST 1: Raster Table Count
Query: SELECT COUNT(*) as raster_table_count FROM raster_columns;
 raster_table_count 
--------------------
                  0
(1 row)

BASELINE TEST 2: System-Wide Stats (should be all zeros) - FIXED
Query: System aggregates with proper array handling
 total_raster_tables | unique_srids | avg_bands_per_table | schemas_with_rasters | in_database_tables | aligned_tables 
---------------------+--------------+---------------------+----------------------+--------------------+----------------
                   0 |            0 |                     |                    0 |                  0 |              0
(1 row)

BASELINE TEST 3: Overview Count
Query: SELECT COUNT(*) as overview_count FROM raster_overviews;
 overview_count 
----------------
              0
(1 row)

-- ================================================================================
-- CREATING SAMPLE RASTER DATA FOR TESTING
-- ================================================================================
Creating sample raster tables with different configurations...
DROP TABLE
DROP TABLE
DROP TABLE
psql:/tmp/raster_yaml_verification_fixed.sql:42: NOTICE:  table "satellite_imagery" does not exist, skipping
psql:/tmp/raster_yaml_verification_fixed.sql:43: NOTICE:  table "elevation_data" does not exist, skipping
psql:/tmp/raster_yaml_verification_fixed.sql:44: NOTICE:  table "weather_data" does not exist, skipping
CREATE TABLE
INSERT 0 2
UPDATE 1
UPDATE 1
psql:/tmp/raster_yaml_verification_fixed.sql:64: ERROR:  function addrasterconstraints(name, name, name, text[]) does not exist
LINE 1: SELECT AddRasterConstraints('public'::name, 'satellite_image...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
CREATE TABLE
INSERT 0 2
UPDATE 2
psql:/tmp/raster_yaml_verification_fixed.sql:82: ERROR:  function addrasterconstraints(name, name, name, text[]) does not exist
LINE 1: SELECT AddRasterConstraints('public'::name, 'elevation_data'...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
CREATE TABLE
INSERT 0 2
UPDATE 2
psql:/tmp/raster_yaml_verification_fixed.sql:100: ERROR:  function addrasterconstraints(name, name, name, text[]) does not exist
LINE 1: SELECT AddRasterConstraints('public'::name, 'weather_data'::...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
Sample raster data created successfully!
-- ================================================================================
-- TESTING ALL YAML QUERIES WITH POPULATED DATA
-- ================================================================================
YAML TEST 1: Raster Table Count
Query: SELECT COUNT(*) as raster_table_count FROM raster_columns;
 raster_table_count 
--------------------
                  3
(1 row)

YAML TEST 2: Raster Columns Info
Query: SELECT r_table_schema, r_table_name, r_raster_column, srid, num_bands FROM raster_columns ORDER BY r_table_schema, r_table_name;
 r_table_schema |   r_table_name    | r_raster_column | srid | num_bands 
----------------+-------------------+-----------------+------+-----------
 public         | elevation_data    | rast            |    0 |          
 public         | satellite_imagery | rast            |    0 |          
 public         | weather_data      | rast            |    0 |          
(3 rows)

YAML TEST 3: SRID Distribution
Query: SELECT srid, COUNT(*) as raster_count FROM raster_columns GROUP BY srid ORDER BY raster_count DESC;
 srid | raster_count 
------+--------------
    0 |            3
(1 row)

YAML TEST 4: Band Count Statistics
Query: SELECT num_bands, COUNT(*) as table_count FROM raster_columns GROUP BY num_bands ORDER BY num_bands;
 num_bands | table_count 
-----------+-------------
           |           3
(1 row)

YAML TEST 5: Pixel Type Analysis (FIXED)
Query: Handle pixel_types array properly
 pixel_type | usage_count 
------------+-------------
(0 rows)

YAML TEST 6: NoData Value Statistics (FIXED)
Query: Handle nodata_values array properly
 nodata_value | usage_count 
--------------+-------------
(0 rows)

YAML TEST 7: Raster Overview Count
Query: SELECT COUNT(*) as overview_count FROM raster_overviews;
 overview_count 
----------------
              0
(1 row)

YAML TEST 8: Overview Factor Distribution
Query: SELECT overview_factor, COUNT(*) as overview_count FROM raster_overviews GROUP BY overview_factor ORDER BY overview_factor;
 overview_factor | overview_count 
-----------------+----------------
(0 rows)

YAML TEST 9: Storage Type Distribution (FIXED)
Query: Handle out_db array properly
 storage_type | table_count 
--------------+-------------
 in-database  |           3
(1 row)

YAML TEST 10: Raster Constraints
Query: SELECT same_alignment, regular_blocking, COUNT(*) as table_count FROM raster_columns GROUP BY same_alignment, regular_blocking ORDER BY table_count DESC;
 same_alignment | regular_blocking | table_count 
----------------+------------------+-------------
 f              | f                |           3
(1 row)

YAML TEST 11: Schema Distribution
Query: SELECT r_table_schema, COUNT(*) as raster_table_count, COUNT(DISTINCT srid) as unique_srids, AVG(num_bands) as avg_bands FROM raster_columns GROUP BY r_table_schema ORDER BY raster_table_count DESC;
 r_table_schema | raster_table_count | unique_srids | avg_bands 
----------------+--------------------+--------------+-----------
 public         |                  3 |            1 |          
(1 row)

YAML TEST 12: System-Wide Aggregates (FIXED)
Query: Complete system statistics with proper array handling
 total_raster_tables | unique_srids | avg_bands_per_table | schemas_with_rasters | in_database_tables | aligned_tables 
---------------------+--------------+---------------------+----------------------+--------------------+----------------
                   3 |            1 |                     |                    1 |                  3 |              0
(1 row)

YAML TEST 13: Scale/Resolution Stats
Query: SELECT scale_x, scale_y, COUNT(*) as table_count FROM raster_columns WHERE scale_x IS NOT NULL AND scale_y IS NOT NULL GROUP BY scale_x, scale_y ORDER BY table_count DESC;
 scale_x | scale_y | table_count 
---------+---------+-------------
(0 rows)

YAML TEST 14: Block Size Distribution
Query: SELECT blocksize_x, blocksize_y, COUNT(*) as table_count FROM raster_columns WHERE blocksize_x IS NOT NULL AND blocksize_y IS NOT NULL GROUP BY blocksize_x, blocksize_y ORDER BY table_count DESC;
 blocksize_x | blocksize_y | table_count 
-------------+-------------+-------------
(0 rows)

-- ================================================================================
-- VERIFICATION SUMMARY
-- ================================================================================
Summary: All YAML queries executed successfully
Verification Results:
- Baseline (empty) tests: Confirmed zero counts
- Populated data tests: Confirmed non-zero results
- All metric queries from YAML are functional
- Raster metadata catalog is properly populated
Final Raster Catalog Summary:
         metric          | value 
-------------------------+-------
 Total raster tables     | 3
 Unique SRIDs            | 1
 Average bands per table | NULL
 Schemas with rasters    | 1
(4 rows)

-- ================================================================================
-- CLEANUP TEST DATA
-- ================================================================================
Cleaning up test raster tables...
DROP TABLE
DROP TABLE
DROP TABLE
PostGIS Raster YAML verification complete!
